% Simple voting model with one voter, one coercer and two candidates
Agent Voter[1]:
init: q0
vote1: q0 -> v1
vote2: q0 -> v2
shared gv1_aID: v1 -> gv1  [aID_revealed1=True]
shared ng1_aID: v1 -> ngv1
shared gv2_aID: v2 -> gv2  [aID_revealed2=True]
shared ng2_aID: v2 -> ngv2
repeatG1: gv1 -> q0
repeatN1: ngv1 -> q0
repeatG2: gv2 -> q0
repeatN2: ngv2 -> q0
shared stopG1_aID: gv1 -> sg1 [aID_voted1=True]
shared stopN1_aID: ngv1 -> sn1 [aID_voted1=True]
shared stopG2_aID: gv2 -> sg2 [aID_voted2=True]
shared stopN2_aID: ngv2 -> sn2 [aID_voted2=True]
loopG1: sg1 -> sg1
loopN1: sn1 -> sn1
loopG2: sg2 -> sg2
loopN2: sn2 -> sn2

Agent Coercer[1]:
init: q0
shared gv1_Voter1: q0 -> q0
shared ng1_Voter1: q0 -> q0
shared gv2_Voter1: q0 -> q0
shared ng2_Voter1: q0 -> q0
shared stopG1_Voter1: q0 -> q1_Voter1
shared stopN1_Voter1: q0 -> q1_Voter1
shared stopG2_Voter1: q0 -> q2_Voter1
shared stopN2_Voter1: q0 -> q2_Voter1
np1_Voter1: q1_Voter1 -> q0
np2_Voter1: q2_Voter1 -> q0
pun1_Voter1: q1_Voter1 -> q1p_Voter1 [aID_pun1_1=True]
pun2_Voter1: q2_Voter1 -> q2p_Voter1 [aID_pun2_1=True]
return1_Voter1: q1p_Voter1 -> q0
return2_Voter1: q2p_Voter1 -> q0

REDUCTION: [Coercer1_pun1_1, Coercer1_pun2_1, Voter1_revealed1, Voter1_revealed2, Voter1_voted1, Voter1_voted2]
COALITION: [Coercer1]
FORMULA: <<Coercer1>>F(Coercer1_pun1_1=True)
% When SHOW_EPISTEMIC is False, epistemic classes will be generated, but will not be shown on the interface
% Provides better performance for some models
% By default this value is set to True
SHOW_EPISTEMIC: True