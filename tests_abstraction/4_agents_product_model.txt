Agent p_one x q_one x r_one x s_one[1]:
init: p_init x q_init x r_init x s_init
shared transition1: p_init x q_init x r_init x s_init -[some_condition==True,x_p1<=10]> p_final x q_final x r_init x s_init[x_p1=1,transition_taken_q1=True]
: p_init x q_init x r_init x s_init -> p_init x q_init x r_final x s_init[x_p1=4]
: p_init x q_init x r_init x s_init -> p_init x q_init x r_init x s_final[x_p1=5]
: p_final x q_final x r_init x s_init -> p_final x q_final x r_final x s_init[x_p1=4]
: p_final x q_final x r_init x s_init -> p_final x q_final x r_init x s_final[x_p1=5]
: p_final x q_final x r_init x s_final -> p_final x q_final x r_final x s_final[x_p1=4]
: p_final x q_final x r_final x s_init -> p_final x q_final x r_final x s_final[x_p1=5]
shared transition1: p_init x q_init x r_final x s_init -[some_condition==True,x_p1<=10]> p_final x q_final x r_final x s_init[x_p1=1,transition_taken_q1=True]
: p_init x q_init x r_final x s_init -> p_init x q_init x r_final x s_final[x_p1=5]
shared transition1: p_init x q_init x r_final x s_final -[some_condition==True,x_p1<=10]> p_final x q_final x r_final x s_final[x_p1=1,transition_taken_q1=True]
shared transition1: p_init x q_init x r_init x s_final -[some_condition==True,x_p1<=10]> p_final x q_final x r_init x s_final[x_p1=1,transition_taken_q1=True]
: p_init x q_init x r_init x s_final -> p_init x q_init x r_final x s_final[x_p1=4]
